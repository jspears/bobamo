{
  "name": "blueimp-canvas-to-blob",
  "version": "2.0.3",
  "title": "JavaScript Canvas to Blob",
  "description": "JavaScript Canvas to Blob is a function to convert canvas elements into Blob objects.",
  "keywords": [
    "javascript",
    "canvas",
    "blob",
    "convert",
    "conversion"
  ],
  "homepage": "https://github.com/blueimp/JavaScript-Canvas-to-Blob",
  "author": {
    "name": "Sebastian Tschan",
    "url": "https://blueimp.net"
  },
  "maintainers": [
    {
      "name": "Sebastian Tschan",
      "url": "https://blueimp.net"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/blueimp/JavaScript-Canvas-to-Blob.git"
  },
  "bugs": "https://github.com/blueimp/JavaScript-Canvas-to-Blob/issues",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "canvas-to-blob.js",
  "readme": "# JavaScript Canvas to Blob\n\n## Usage\nInclude the (minified) JavaScript Canvas to Blob script in your HTML markup:\n\n```html\n<script src=\"canvas-to-blob.min.js\"></script>\n```\n\nThe JavaScript Canvas to Blob script is a polyfill for the standard HTML [canvas.toBlob](http://www.w3.org/TR/html5/the-canvas-element.html#dom-canvas-toblob) method:\n\n```js\nvar canvas = document.createElement('canvas'); \n/* ... your canvas manipulations ... */\nif (canvas.toBlob) {\n    canvas.toBlob(\n        function (blob) {\n            // Do something with the blob object,\n            // e.g. creating a multipart form for file uploads:\n            var formData = new FormData();\n            formData.append('file', blob, fileName);\n            /* ... */\n        },\n        'image/jpeg'\n    );\n}\n```\n\n## Requirements\nThe JavaScript Canvas to Blob function has zero dependencies.\n\nHowever, Canvas to Blob is a very suitable complement to the [JavaScript Load Image](https://github.com/blueimp/JavaScript-Load-Image) function.\n\n## API\nIn addition to the **canvas.toBlob** polyfill, the JavaScript Canvas to Blob script provides one additional function called **dataURLtoBlob**, which is added to the global window object if no AMD loader is used to load the script:\n\n```js\n// 80x60px GIF image (color black, base64 data):\nvar b64Data = 'R0lGODdhUAA8AIABAAAAAP///ywAAAAAUAA8AAACS4SPqcvtD6' +\n        'OctNqLs968+w+G4kiW5omm6sq27gvH8kzX9o3n+s73/g8MCofE' +\n        'ovGITCqXzKbzCY1Kp9Sq9YrNarfcrvcLDovH5PKsAAA7',\n    imageUrl = 'data:image/gif;base64,' + b64Data,\n    blob = window.dataURLtoBlob && window.dataURLtoBlob(imageUrl);\n```\n\n## License\nThe JavaScript Canvas to Blob script is released under the [MIT license](http://www.opensource.org/licenses/MIT).\n",
  "_id": "blueimp-canvas-to-blob@2.0.3",
  "_from": "blueimp-canvas-to-blob@>=2.0.3"
}
